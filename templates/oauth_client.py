#!/usr/bin/env python
"""
Utility Python3 script to get a Access/Refresh token from an Authorization Server.
Useful when assessing API based on OAUTH2 like PSD2 API for example.
"""
import requests
import sys

# Context
client_id = "xxx"
client_secret = "xxx"
scope = "xxx"
authorization_server_token_endpoint = "https://host.com/auth/token"
prx = {"http": "http://127.0.0.1:8080", "https": "http://127.0.0.1:8080"}

# Working mode
requests.packages.urllib3.disable_warnings(requests.packages.urllib3.exceptions.InsecureRequestWarning)
if len(sys.argv) == 2:
    print("[+] Get access token from 'refresh_token':")
    resfresh_token = sys.argv[1]
else:
    print("[+] Get a access token from 'client_credentials':")
    resfresh_token = None

# Processing
params = {"grant_type": "client_credentials", "client_id": client_id, "client_secret": client_secret, "scope": scope}
if resfresh_token is not None:
    params["grant_type"] = "refresh_token"
    params["refresh_token"] = resfresh_token
    del params["scope"]
response = requests.post(url=authorization_server_token_endpoint, data=params, verify=False, timeout=20)
if response.status_code != 200:
    print(f"Token endpoint returned not OK response (HTTP {response.status_code}) with the following content:\n{response.text}")
    sys.exit(-1)
print(">> Access token:")
print(response.json()["access_token"])
print(">> Refresh token:")
print(response.json()["refresh_token"])
