#!/usr/bin/env python
import json
import colorama
import sys
from termcolor import colored
from tabulate import tabulate

'''
Quick script to format the result of a Gitleaks JSON report:
    gitleaks detect --config gitleaks-custom-config.toml --no-banner --report-format json --report-path report.json --source $(pwd) --verbose
    python generate-report-gitleaks.py report.json

Dependencies:
    pip install tabulate colorama termcolor
'''

report = sys.argv[1]
colorama.init()
with open(report) as f:
    content = f.read()
leaks = json.loads(content)
table_rows = []
keys = []
table_headers = ["File", "Line", "Commit", "Leak"]
commits_id_are_absent = False
for leak in leaks:
    key = leak["offender"]
    if key not in keys:
        if len(leak["commit"].strip()) == 0:
            commits_id_are_absent = True
            table_rows.append([leak["file"], leak["lineNumber"], leak["offender"].strip()])
        else:
            table_rows.append([leak["file"], leak["lineNumber"], leak["commit"], leak["offender"].strip()])
        keys.append(key)
table_rows.sort()
if commits_id_are_absent:
    table_headers = ["File", "Line", "Leak"]
print(colored(f"[+] Unique leaks ({len(table_rows)} founds):", "yellow"))
print(tabulate(table_rows, headers=table_headers))
