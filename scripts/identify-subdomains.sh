#!/bin/bash
# Script to discover subdomains of a base domain.
if [ "$#" -lt 1 ]; then
    script_name=$(basename "$0")
    echo "Usage:"
    echo "   $script_name [BASE_DOMAIN]"
    echo ""
    echo "Call example:"
    echo "    $script_name righettod.eu"
    exit 1
fi
maindomain=$1
limit=40
work_file="/tools/reports/subdomains.tmp"
results_file="/tools/reports/subdomains.txt"
crt_file="/tools/reports/crt.json"
seclists_base="/tools/sec-lists"
seclists_dicts=("$seclists_base/Fuzzing/environment-identifiers.txt" "$seclists_base/Discovery/DNS/namelist.txt" "$seclists_base/Discovery/DNS/namelist.txt")
echo -e "\e[93m[+] Lookup in Certificate Transparency log ...\e[0m"
rm -f $crt_file 2>/dev/null
touch $crt_file
while [ ! -s "$crt_file" ]
do
	curl -sk "https://crt.sh/?q=$maindomain&output=json" --output $crt_file
	cat $crt_file | jq -r ".[].name_value" | grep -v "*" | sort -u > $work_file
done
wc -l $work_file
echo -e "\e[93m[+] Discover via SubFinder default sources ...\e[0m"
subfinder -disable-update-check -silent -d $maindomain >> $work_file
wc -l $work_file
for dict in ${seclists_dicts[@]}; do
	dict_name=$(basename $dict)
	echo -e "\e[93m[+] Discover via DNSX with SecLists '$dict_name' dictionary ...\e[0m"
	dnsx -disable-update-check -silent -stats -d $maindomain -t $limit -rl $limit -w $dict >> $work_file
	wc -l $work_file
done
echo -e "\e[93m[+] Filter & verify final results ...\e[0m"
cat $work_file | sort -u > $work_file.tmp
mv $work_file.tmp $work_file
dnsx -disable-update-check -silent -t $limit -rl $limit -l $work_file -a -resp -o $results_file
echo -e "\e[92m[V] Identified valid sub domains stored into file '$results_file'.\e[0m"
rm $work_file
rm $crt_file
