#!/bin/bash
###
# Script to discover hidden content on a web site/app.
# Cf https://github.com/ffuf/ffuf#usage
# Use -fl X to skip responses with X number of lines
#     -fs X to skip responses with a response size of X bytes
#     -fw X to skip responses with X words
#     -fl 12,25 to skip responses with 12 or 25 number of lines (same syntax for 'fs' and 'fw')
###
EXTRA_FFUF_OPTS=""
COOKIES="Cookie: a=b"
AUTHENTICATION_HEADER="X-Origin: RIGHETTOD"
PROXY=""
IGNORE_HTTP_CODES="400,401,403,404"
THREAD_COUNT="10"
###
DICT_HOME="/tools/sec-lists/Discovery/Web-Content"
REPORT_HOME="/tools/reports"
EXTENSIONS=".asp,.aspx,.jsp,.php,.html,.htm,.js,.min.js,.js.map,.txt,.json,.lock,.config.js,-config.js,.properties,.env,.config,.yml"
###
if [ "$PROXY" != "" ];
then
	ffuf_proxy="-x $PROXY"
	curl_proxy="--proxy $PROXY"
else
	ffuf_proxy=""
	curl_proxy=""
fi
base_target=$1
# Phase 1
echo -e "\e[93m[PHASE 1] Identify directories and search content into them using 'common.txt' ...\e[0m"
opts=" $EXTRA_FFUF_OPTS $ffuf_proxy -fc $IGNORE_HTTP_CODES -c -ic -timeout 30 -t $THREAD_COUNT "
katana -silent -disable-update-check -depth 10 -known-files all -automatic-form-fill -ignore-query-params -js-crawl -crawl-duration 5m -field dir -H "$AUTHENTICATION_HEADER" -H "$COOKIES" -u $base_target | sort -u > $REPORT_HOME/dir.txt
cat $REPORT_HOME/dir.txt | sed -e 's/^.//' -e 's/.$//' > $REPORT_HOME/dir.tmp
mv $REPORT_HOME/dir.tmp $REPORT_HOME/dir.txt
dir_count=$(wc -l $REPORT_HOME/dir.txt | cut -d' ' -f1)
if [ $dir_count -ne 0 ]
then
	ffuf $opts -w $REPORT_HOME/dir.txt:FLD -w $DICT_HOME/common.txt:FLE -u "$base_target/FLD/FLE" -H "$COOKIES" -H "$AUTHENTICATION_HEADER"
else
	echo "No directory found."
fi
# Phase 2
opts=" $EXTRA_FFUF_OPTS -recursion -recursion-depth 5 $ffuf_proxy -fc $IGNORE_HTTP_CODES -r -c -ic -timeout 30 -t $THREAD_COUNT "
dicts=("quickhits.txt" "common.txt" "graphql.txt" "swagger.txt" "spring-boot.txt" "axis.txt" "Common-DB-Backups.txt" "versioning_metafiles.txt" "ntlm-directories.txt" "raft-small-words.txt")
for dict in ${dicts[@]}; do
	entries_count=$(wc -l $DICT_HOME/$dict | cut -d' ' -f1)
	echo -e "\e[93m[PHASE 2] Test using SecLists dictionary '$dict' ($entries_count entries) ...\e[0m"
	if [ "$dict" != "raft-small-words.txt" ];
	then
		ffuf $opts -w $DICT_HOME/$dict -u $base_target/FUZZ -H "$COOKIES" -H "$AUTHENTICATION_HEADER"
	else
		ffuf $opts -e $EXTENSIONS -w $DICT_HOME/$dict -u $base_target/FUZZ -H "$COOKIES" -H "$AUTHENTICATION_HEADER"
	fi
done
